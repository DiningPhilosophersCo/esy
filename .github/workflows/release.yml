name: Build

on:
  push:
    branches:
      - master
      - prometheansacrifice/msvc
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - uses: actions/setup-node@v4
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1000
          fetch-tags: true
      - run: sh ./esy-version/version.sh --reason > ./esy-version/EsyVersion.re
        name: "Generate EsyVersion.re"
      - name: Install esy
        run: npm install -g esy
      - uses: esy/github-action@master
        with:
          source-cache-key: 20240515-1
          cache-key: ${{ hashFiles('esy.lock/index.json') }}-20240515-1
      - uses: esy/github-action@master
        id: prepare-npm-artifacts
        with:
          source-cache-key: 20240515-1
          cache-key: ${{ hashFiles('esy.lock/index.json') }}-20240515-1
          prepare-npm-artifacts-mode: true

  bundle:
    permissions:
      contents: write
    needs: build
    runs-on: macos-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: true
      - uses: esy/github-action@prometheansacrifice/npm-release
        with:
          source-cache-key: 20240515-1
          cache-key: ${{ hashFiles('esy.lock/index.json') }}-20240515-1
          bundle-npm-artifacts-mode: true
          postinstall-js: .ci/release-postinstall.js

      - run: |
          $env:NPM_RELEASE_FOLDER=_npm-release
          node scripts/set-package-version.js ./$NPM_RELEASE_FOLDER/package.json > ./$NPM_RELEASE_FOLDER/package.json.tmp
          mv -Force ./$NPM_RELEASE_FOLDER/package.json.tmp ./$NPM_RELEASE_FOLDER/package.json
        name: "Set NPM package version"
        shell: "pwsh"

      - name: Publish to NPM registry
        working-directory: _release
        if: github.ref == 'refs/heads/prometheansacrifice/msvc'
        run: npm publish --access=public .
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
